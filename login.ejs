<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<title>ACL Example</title>
<style>
   body {
    font-family: 'Arial', sans-serif; /* ใช้ฟอนต์ที่ดูดี */
    color: #333; /* เปลี่ยนสีข้อความให้เข้มขึ้น */
    background-color: #f8f9fa; /* พื้นหลังที่อ่อนนุ่ม */
    margin: 0; /* ลบขอบนอก */
    padding: 0; /* ลบระยะห่างใน */
    overflow: hidden; /* ป้องกันการเลื่อนหน้า */
}

h1, h2 {
    text-align: center; /* จัดข้อความให้กึ่งกลาง */
    color: #ffffff; /* สีข้อความสำหรับหัวข้อ */
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); /* เพิ่มเงาให้หัวข้อ */
    margin: 20px 0; /* เพิ่มระยะห่างด้านบนและล่าง */
}

.user-container {
    background-color: rgba(255, 255, 255, 0.9); /* ทำให้พื้นหลังมีความโปร่งแสง */
    border-radius: 10px; /* มุมโค้ง */
    padding: 20px; /* เพิ่มระยะห่างรอบๆ */
    max-height: 400px; /* กำหนดความสูงสูงสุด */
    overflow-y: auto; /* ให้มีการเลื่อนในกรณีที่ข้อมูลยาวเกิน */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* เพิ่มเงาให้กับกล่อง */
    margin: 20px 0; /* ระยะห่างด้านบนและล่าง */
}

.user-item {
    background-color: #f8f9fa; /* เปลี่ยนพื้นหลังของรายการผู้ใช้ */
    border-radius: 5px; /* มุมโค้ง */
    transition: background-color 0.3s; /* เพิ่มการเปลี่ยนสีเมื่อวางเมาส์ */
    padding: 10px; /* เพิ่มระยะห่างในรายการ */
    margin-bottom: 10px; /* ระยะห่างระหว่างรายการ */
    display: flex; /* ใช้ Flexbox สำหรับจัดรูปแบบ */
    justify-content: space-between; /* จัดเรียงเนื้อหาสองด้าน */
    align-items: center; /* จัดเรียงแนวตั้ง */
}

.user-item:hover {
    background-color: #e9ecef; /* สีพื้นหลังเมื่อวางเมาส์ */
}

form {
    max-width: 400px; /* ความกว้างสูงสุดของฟอร์ม */
    margin: 0 auto; /* จัดกึ่งกลาง */
}

input[type="text"], input[type="number"], input[type="email"] {
    border-radius: 5px; /* มุมโค้ง */
    border: 1px solid #ccc; /* ขอบปกติ */
    margin-bottom: 10px; /* ระยะห่างระหว่างฟอร์ม */
    padding: 8px; /* เพิ่มระยะห่างในฟอร์ม */
    width: 100%; /* ใช้ความกว้างเต็มที่ */
}

input[type="submit"] {
    background-color: #007bff; /* สีพื้นหลังของปุ่มส่ง */
    color: white; /* สีข้อความ */
    border: none; /* ไม่มีขอบ */
    border-radius: 5px; /* มุมโค้ง */
    padding: 10px 15px; /* ระยะห่างในปุ่ม */
    cursor: pointer; /* แสดงว่าเป็นปุ่มคลิกได้ */
    transition: background-color 0.3s; /* เพิ่มการเปลี่ยนสีเมื่อวางเมาส์ */
}

input[type="submit"]:hover {
    background-color: #0056b3; /* เปลี่ยนสีพื้นหลังเมื่อวางเมาส์ */
}

footer {
    background-color: #343a40; /* สีพื้นหลังของฟุตเตอร์ */
    color: #ffffff; /* สีข้อความ */
    text-align: center; /* จัดข้อความให้กึ่งกลาง */
    padding: 20px 0; /* เพิ่มระยะห่างด้านบนและล่าง */
}

footer a {
    color: #ffffff; /* สีลิงก์ในฟุตเตอร์ */
    margin: 0 10px; /* ระยะห่างระหว่างลิงก์ */
}

footer a:hover {
    text-decoration: underline; /* ขีดเส้นใต้เมื่อวางเมาส์ */
}

.container {
    margin: 0 auto; /* จัดกึ่งกลาง */
    max-width: 1200px; /* ความกว้างสูงสุด */
    padding: 0 15px; /* เพิ่มระยะห่างด้านซ้ายและขวา */
}


</style>
</head>
<body>
    <header class="p-3 text-bg-dark">
        <div class="container" bis_skin_checked="1">
          <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start" bis_skin_checked="1">
            <a href="/" class="d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none">
              <svg class="bi me-2" width="40" height="32" role="img" aria-label="Bootstrap"><use xlink:href="#bootstrap"></use></svg>
            </a>
    
            <ul class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0">
              <li><a href="login" class="nav-link px-2 text-secondary">Home</a></li>
              <li><a href="ข้อมูลนักศึกษา.html" class="nav-link px-2 text-secondary">ข้อมูลนักศึกษา</a></li>
            </ul>
    
            <form class="col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3" role="search">
              <input type="search" class="form-control form-control-dark text-bg-dark" placeholder="Search..." aria-label="Search">
            </form>
    
            <div class="text-end" bis_skin_checked="1">
              <button type="button" class="btn btn-outline-light me-2">Login</button>
              <button type="button" class="btn btn-warning">Sign-up</button>
              <a href="/logout">Logout</a>
            </div>
          </div>
        </div>
      </header>

      
        <div class="background"><h1>รายชื่อนักศึกษา</h1>
          
<div id="user-list" class="user-container"></div>

<h2>เช็คชื่อนักศึกษา</h2>
<form action="/users" method="POST">
  <label for="name">Name:</label>
  <input type="text" id="name" name="name" required>
  
  <label for="age">Age:</label>
  <input type="number" id="age" name="age" required>

  <label for="email">Email:</label>
  <input type="email" id="email" name="email" required>
  
  <input type="submit" value="submit">
</form>

<script>
const userList = document.getElementById('user-list');
const userForm = document.getElementById('user-form');

// Fetch users and display
async function fetchUsers() {
const response = await fetch('/std');
const users = await response.json();
userList.innerHTML = '';
users.forEach(user => {
const userDiv = document.createElement('div');
userDiv.classList.add('user-item');
userDiv.innerHTML = `
<span>${user.name} (${user.email})</span>
<div class="user-actions">
<button onclick="updateUser(${user.id}, '${user.name}',
'${user.email}')">Update</button>
<button onclick="deleteUser(${user.id})">Delete</button>
</div>
`;
userList.appendChild(userDiv);
});
}

// Add new user
userForm.addEventListener('submit', async (e) => {
e.preventDefault();
const name = document.getElementById('name').value;
const email = document.getElementById('email').value;

await fetch('/std/add', {
method: 'POST',
headers: { 'Content-Type': 'application/json' },
body: JSON.stringify({ name, email })
});
fetchUsers();
});

// Update user
async function updateUser(id, name, email) {
const newName = prompt('Enter new name:', name);
const newEmail = prompt('Enter new email:', email);
if (newName && newEmail) {
await fetch(`/std/update/${id}`, {
method: 'PUT',
headers: { 'Content-Type': 'application/json' },
body: JSON.stringify({ name: newName, email: newEmail })
});
fetchUsers();
}

}

// Delete user
async function deleteUser(id) {
if (confirm('Are you sure to delete this user?')) {
await fetch(`/std/delete/${id}`, {
method: 'DELETE'
});
fetchUsers();
}
}

// Initial load
fetchUsers();
</script>
</div>   

<div class="container" bis_skin_checked="1">
    <footer class="d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top ">
      <div class="col-md-4 d-flex align-items-center" bis_skin_checked="1">
        <a href="/" class="mb-3 me-2 mb-md-0 text-body-secondary text-decoration-none lh-1">
          <svg class="bi" width="30" height="24"><use xlink:href="#bootstrap"></use></svg>
        </a>
        <span class="mb-3 mb-md-0 text-body-secondary">© 2024 Navarit Kwangsinghanah</span>
      </div>
  
      <ul class="nav col-md-4 justify-content-end list-unstyled d-flex">
        <li class="ms-3"><a class="text-body-secondary" href="#"><svg class="bi" width="24" height="24"><use xlink:href="#twitter"></use></svg></a></li>
        <li class="ms-3"><a class="text-body-secondary" href="#"><svg class="bi" width="24" height="24"><use xlink:href="#instagram"></use></svg></a></li>
        <li class="ms-3"><a class="text-body-secondary" href="#"><svg class="bi" width="24" height="24"><use xlink:href="#facebook"></use></svg></a></li>
      </ul>
    </footer>
  </div>


</body>
</html>